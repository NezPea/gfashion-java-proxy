swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "GFashion Category swagger API "
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/"
tags:
  - name: "gfashion"
    description: "Everything about your Category"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "category"
    description: "Access to GFashion category"
schemes:
  - "https"
  - "http"
paths:
  /gfashion/api/v1/categoriesList:
    get:
      tags:
        - "category"
      summary: "List category "
      description: "Get category list"
      operationId: "getAllCategory"
      produces:
        - "application/json"
      parameters:
        - name: "searchCriteria[filterGroups][0][filters][0][field]"
          in: "query"
          description: "Field"
          required: false
          type: "string"
        - name: "searchCriteria[filterGroups][0][filters][0][value]"
          in: "query"
          description: "Value"
          required: false
          type: "string"
        - name: "searchCriteria[filterGroups][0][filters][0][conditionType]"
          in: "query"
          description: "Condition type"
          required: false
          type: "string"
        - name: "searchCriteria[sortOrders][0][field]"
          in: "query"
          description: "Sorting field."
          required: false
          type: "string"
        - name: "searchCriteria[sortOrders][0][direction]"
          in: "query"
          description: "Sorting direction."
          required: false
          type: "string"
        - name: "searchCriteria[pageSize]"
          in: "query"
          description: "Page size."
          required: false
          type: "string"
        - name: "searchCriteria[currentPage]"
          in: "query"
          description: "Current page."
          required: false
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/category_search_results"
        "400":
          description: ""
        "404":
          description: "Category not found"
      security:
        - api_key: []

  /gfashion/api/v1/categories/{categoryId}:
    get:
      tags:
        - "category"
      summary: "Find category by categoryId"
      description: "Get info about category by category id"
      operationId: "getCategoryInfoById"
      produces:
        - "application/json"
      parameters:
        - name: "categoryId"
          in: "path"
          description: "categoryId of CategoryDetail to return"
          required: true
          type: "integer"
          format: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/category"
        "400":
          description: "Invalid categoryId supplied"
        "404":
          description: "CategoryDetail not found"
      security:
        - api_key: []

  /gfashion/api/v1/categories/{categoryId}/products:
    get:
      tags:
        - "category"
      summary: "Find Products by categoryId"
      description: "Get products assigned to category"
      operationId: "getProductsByCategoryId"
      produces:
        - "application/json"
      parameters:
        - name: "categoryId"
          in: "path"
          description: "categoryId of CategoryDetail to return"
          required: true
          type: "integer"
          format: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/category_products"
        "400":
          description: "Invalid categoryId supplied"
        "404":
          description: "CategoryDetail not found"
      security:
        - api_key: []
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify category in your account"
      read:pets: "read your category"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  category_search_results:
    type: "object"
    properties:
      items:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/category"
      search_criteria:
        $ref: "#/definitions/search_criteria"
      total_count:
        type: "integer"
        format: "int64"
    xml:
      name: "category_search_results"
  search_criteria:
    type: "object"
    properties:
      filter_groups:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/filter_group"
      sort_orders:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/sort_order"
      page_size:
        type: "integer"
        format: "int64"
      current_page:
        type: "integer"
        format: "int64"
    xml:
      name: "search_criteria"
  filter_group:
    type: "object"
    required:
      - "field"
      - "value"
    properties:
      filters:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/filter"
    xml:
      name: "filter_group"
  filter:
    type: "object"
    required:
      - "field"
      - "value"
    properties:
      field:
        type: "string"
      value:
        type: "string"
      condition_type:
        type: "string"
    xml:
      name: "filter"
  sort_order:
    type: "object"
    required:
      - "field"
      - "direction"
    properties:
      field:
        type: "string"
      direction:
        type: "string"
    xml:
      name: "sort_order"
  category:
    type: "object"
    required:
      - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
      parent_id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      is_active:
        type: "boolean"
      position:
        type: "integer"
        format: "int64"
      level:
        type: "integer"
        format: "int64"
      children:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      path:
        type: "string"
      extension_attributes:
        $ref: "#/definitions/attribute"
      include_in_menu:
        type: "boolean"
      product_links:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/product_links"
    xml:
      name: "category"
  category_products:
    type: "object"
    required:
      - "category_id"
    properties:
      category_id:
        type: "string"
      product_links:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/product_links"
      position:
        type: "integer"
        example: 2
      sku:
        type: "string"
    xml:
      name: "productdetail"
  product_links:
    type: "object"
    properties:
      link_type:
        type: "string"
        example: "crosssell"
      image:
        type: "string"
        example: "/u/g/ug04-bk-0.jpg"
      linked_product_sku:
        type: "string"
        example: "24-UG04"
      linked_product_type:
        type: "string"
        example: "simple"
      name:
        type: "string"
        example: "Pushup Grips"
      position:
        type: "integer"
        example: 2
      sku:
        type: "string"
        example: "24-MB04"
      # shipDate:
      #   type: "string"
      #   format: "date-time"
      # status:
      #   type: "string"
      #   description: "Order Status"
      #   enum:
      #   - "placed"
      #   - "approved"
      #   - "delivered"
      # complete:
      #   type: "boolean"
      #   default: false
    xml:
      name: "product_links"
  images:
    type: "object"
    properties:
      types:
        type: "array"
        format: "string"
        items:
          $ref: "#/definitions/types"
      file:
        type: "string"
        example: "/u/g/ug04-bk-0.jpg"
      media_type:
        type: "string"
        example: "image"
      disabled:
        type: "boolean"
        example: false
      id:
        type: "integer"
        format: "int64"
      label:
        type: "string"
      position:
        type: "integer"
        format: "int64"
    xml:
      name: "images"
  types:
    type: "object"
    properties:
      image:
        type: "string"
      small_image:
        type: "string"
      thumbnail:
        type: "string"
  attribute:
    type: "object"
    properties:
      value:
        type: "string"
        format: "int64"
      attribute_code:
        type: "string"
        example: "color"
    xml:
      name: "Tag"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
